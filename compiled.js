// Generated by CoffeeScript 1.9.3
(function() {
  var I, We, get, obj, ref, the;

  require('multiverse');

  require('ants');

  ref = require('./'), I = ref.I, We = ref.We, the = ref.the;

  require('possible');

  require('through');

  require('inter');

  require('another');

  another((
    obj = {
      posibility: "\nIs that the resulting civilisations will invariably\nexperience a technological singularity and att ai n\na " + (post('biological')) + " character.\n",
      furtherMore: "\nCivilizations of this[sort] may have altered drasic\nally enough to render communication impossible. The\nintelligences of a " + post.singularity + " civilization\nmight require more information exchange than is " + (possible(through, inter.stellar, communication))
    },
    obj[(0 || 1) + " perhaps"] = "\nAny information that one civilization might provide\nthe other would appear elementary, and thus they do\nnot try to communicate, any more than " + You + " and " + I + " attemt talking to " + (ants(ants(ants(ants(ants))))) + "\n\nEven though we do ascribe a form of intelligence to\nthem.\n",
    obj
  ));

  I("certainly see your point", function(but) {
    return but(function(there, Is, one, small, problem) {
      return Is(there(one(small(problem('?')))));
    });
  });

  inter.jected(the, Big.Bang, "Any chance you could serve me up a " + (singularity()));

  require('religion');

  hell('!', {
    make: {
      it: {
        a: 'double'
      }
    }
  });

  get = require('g.et')('/a/load/of/this/guy', function(quofs) {
    quofs(The.Barman);
    return [he()].thinks("its already " + opening.Time);
  });

  require('aaaaw');

  aaaaw('Come on guys', I(function(just, want, a, drink) {
    if ('you dont want' === 2) {
      serve(me);
    }
    return I['could'].always('head', On(over(2, that(['place', 'across', the])))).street();
  }));

  I['wouldn\'t'](function() {
    return (function(that) {
      if (I.was === 'you') {
        return that();
      }
    })(that);
  });

  require('humans');

  require('their')(function() {
    return universes.keep('landing', 'up' + require('having')(humans('in')));
  });

}).call(this);
